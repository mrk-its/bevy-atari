##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
}


server {

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
	server_name atari.ha.sed.pl; # managed by Certbot

	location ~ ^ {
		resolver 8.8.8.8 ipv6=off;
		proxy_hide_header Access-Control-Allow-Origin;
		proxy_hide_header Access-Control-Expose-Headers;

		add_header Access-Control-Allow-Origin *;
		add_header Access-Control-Expose-Headers Content-Disposition;

		location ~ ^/https:/ {
					rewrite ^/https:/*([^/]*)/(.*) /$2 break;
					proxy_pass https://$1;
					proxy_ssl_session_reuse off;
					proxy_ssl_server_name on;
					proxy_ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
					proxy_ssl_protocols TLSv1.3 TLSv1.2;
		}
		location ~ ^/http:/ {
					rewrite ^/http:/*([^/]*)/(.*) /$2 break;
					proxy_pass http://$1;
		}
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/atari.ha.sed.pl/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/atari.ha.sed.pl/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = atari.ha.sed.pl) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name atari.ha.sed.pl;
    return 404; # managed by Certbot


}
